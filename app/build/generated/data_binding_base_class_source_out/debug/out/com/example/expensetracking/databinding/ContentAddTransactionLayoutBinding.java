// Generated by view binder compiler. Do not edit!
package com.example.expensetracking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.expensetracking.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentAddTransactionLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText etAmount;

  @NonNull
  public final TextInputLayout etAmountView;

  @NonNull
  public final TextInputEditText etNote;

  @NonNull
  public final TextInputLayout etNoteView;

  @NonNull
  public final AutoCompleteTextView etTag;

  @NonNull
  public final TextInputLayout etTagView;

  @NonNull
  public final TextInputEditText etTitle;

  @NonNull
  public final TextInputLayout etTitleView;

  @NonNull
  public final AutoCompleteTextView etTransactionType;

  @NonNull
  public final TextInputLayout etTransactionTypeView;

  @NonNull
  public final TextInputEditText etWhen;

  @NonNull
  public final TextInputLayout etWhenView;

  private ContentAddTransactionLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText etAmount, @NonNull TextInputLayout etAmountView,
      @NonNull TextInputEditText etNote, @NonNull TextInputLayout etNoteView,
      @NonNull AutoCompleteTextView etTag, @NonNull TextInputLayout etTagView,
      @NonNull TextInputEditText etTitle, @NonNull TextInputLayout etTitleView,
      @NonNull AutoCompleteTextView etTransactionType,
      @NonNull TextInputLayout etTransactionTypeView, @NonNull TextInputEditText etWhen,
      @NonNull TextInputLayout etWhenView) {
    this.rootView = rootView;
    this.etAmount = etAmount;
    this.etAmountView = etAmountView;
    this.etNote = etNote;
    this.etNoteView = etNoteView;
    this.etTag = etTag;
    this.etTagView = etTagView;
    this.etTitle = etTitle;
    this.etTitleView = etTitleView;
    this.etTransactionType = etTransactionType;
    this.etTransactionTypeView = etTransactionTypeView;
    this.etWhen = etWhen;
    this.etWhenView = etWhenView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentAddTransactionLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentAddTransactionLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_add_transaction_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentAddTransactionLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_amount;
      TextInputEditText etAmount = ViewBindings.findChildViewById(rootView, id);
      if (etAmount == null) {
        break missingId;
      }

      id = R.id.et_amount_view;
      TextInputLayout etAmountView = ViewBindings.findChildViewById(rootView, id);
      if (etAmountView == null) {
        break missingId;
      }

      id = R.id.et_note;
      TextInputEditText etNote = ViewBindings.findChildViewById(rootView, id);
      if (etNote == null) {
        break missingId;
      }

      id = R.id.et_note_view;
      TextInputLayout etNoteView = ViewBindings.findChildViewById(rootView, id);
      if (etNoteView == null) {
        break missingId;
      }

      id = R.id.et_tag;
      AutoCompleteTextView etTag = ViewBindings.findChildViewById(rootView, id);
      if (etTag == null) {
        break missingId;
      }

      id = R.id.et_tag_view;
      TextInputLayout etTagView = ViewBindings.findChildViewById(rootView, id);
      if (etTagView == null) {
        break missingId;
      }

      id = R.id.et_title;
      TextInputEditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.et_title_view;
      TextInputLayout etTitleView = ViewBindings.findChildViewById(rootView, id);
      if (etTitleView == null) {
        break missingId;
      }

      id = R.id.et_transactionType;
      AutoCompleteTextView etTransactionType = ViewBindings.findChildViewById(rootView, id);
      if (etTransactionType == null) {
        break missingId;
      }

      id = R.id.et_transactionType_view;
      TextInputLayout etTransactionTypeView = ViewBindings.findChildViewById(rootView, id);
      if (etTransactionTypeView == null) {
        break missingId;
      }

      id = R.id.et_when;
      TextInputEditText etWhen = ViewBindings.findChildViewById(rootView, id);
      if (etWhen == null) {
        break missingId;
      }

      id = R.id.et_when_view;
      TextInputLayout etWhenView = ViewBindings.findChildViewById(rootView, id);
      if (etWhenView == null) {
        break missingId;
      }

      return new ContentAddTransactionLayoutBinding((LinearLayout) rootView, etAmount, etAmountView,
          etNote, etNoteView, etTag, etTagView, etTitle, etTitleView, etTransactionType,
          etTransactionTypeView, etWhen, etWhenView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
