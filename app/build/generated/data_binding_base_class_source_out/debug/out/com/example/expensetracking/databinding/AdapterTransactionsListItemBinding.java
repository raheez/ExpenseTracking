// Generated by view binder compiler. Do not edit!
package com.example.expensetracking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.expensetracking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterTransactionsListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView transactionAmount;

  @NonNull
  public final CardView transactionCardView;

  @NonNull
  public final TextView transactionCategory;

  @NonNull
  public final ImageView transactionIconView;

  @NonNull
  public final TextView transactionName;

  private AdapterTransactionsListItemBinding(@NonNull CardView rootView,
      @NonNull TextView transactionAmount, @NonNull CardView transactionCardView,
      @NonNull TextView transactionCategory, @NonNull ImageView transactionIconView,
      @NonNull TextView transactionName) {
    this.rootView = rootView;
    this.transactionAmount = transactionAmount;
    this.transactionCardView = transactionCardView;
    this.transactionCategory = transactionCategory;
    this.transactionIconView = transactionIconView;
    this.transactionName = transactionName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterTransactionsListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterTransactionsListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_transactions_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterTransactionsListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.transactionAmount;
      TextView transactionAmount = ViewBindings.findChildViewById(rootView, id);
      if (transactionAmount == null) {
        break missingId;
      }

      CardView transactionCardView = (CardView) rootView;

      id = R.id.transactionCategory;
      TextView transactionCategory = ViewBindings.findChildViewById(rootView, id);
      if (transactionCategory == null) {
        break missingId;
      }

      id = R.id.transactionIconView;
      ImageView transactionIconView = ViewBindings.findChildViewById(rootView, id);
      if (transactionIconView == null) {
        break missingId;
      }

      id = R.id.transactionName;
      TextView transactionName = ViewBindings.findChildViewById(rootView, id);
      if (transactionName == null) {
        break missingId;
      }

      return new AdapterTransactionsListItemBinding((CardView) rootView, transactionAmount,
          transactionCardView, transactionCategory, transactionIconView, transactionName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
