// Generated by Dagger (https://dagger.dev).
package com.example.expensetracking.repo;

import com.example.expensetracking.data.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TransactionRepo_Factory implements Factory<TransactionRepo> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public TransactionRepo_Factory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public TransactionRepo get() {
    return newInstance(appDatabaseProvider.get());
  }

  public static TransactionRepo_Factory create(Provider<AppDatabase> appDatabaseProvider) {
    return new TransactionRepo_Factory(appDatabaseProvider);
  }

  public static TransactionRepo newInstance(AppDatabase appDatabase) {
    return new TransactionRepo(appDatabase);
  }
}
